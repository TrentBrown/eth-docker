# Client choice: See https://eth-docker.net/docs/Usage/ClientSetup for available options
COMPOSE_FILE=lh-base.yml:geth.yml:mev-boost.yml:deposit-cli.yml
# Set the ETH address that priority fees should be sent to
REWARDS_TO=
# Decide whether to connect the CL to Flashbots MEV boost. Set MEV_BOOST to "true" for MEV
# boost, or any other value including empty for not using MEV boost.
# If "true" it also requires mev-boost.yml in COMPOSE_FILE
MEV_BOOST=true
MEV_RELAYS=https://0xb5246e299aeb782fbc7c91b41b3284245b1ed5206134b0028b81dfb974e5900616c67847c2354479934fc4bb75519ee1@builder-relay-kiln.flashbots.net
# Execution client endpoint / chain source. This default uses the execution node container.
# Nimbus requires the URL to be ws:// or wss://, e.g. ws://execution:8546
EL_NODE=http://execution:8545
# Make this ws:// for Nimbus.
EL_NODE_EXECUTION=http://execution:8551
# Graffiti to use for validator
GRAFFITI=eth-docker
# Network parameters to use
NETWORK=kiln
NETWORK_ID=1337802
TOTAL_TERMINAL_DIFFICULTY=20000000000000
ENODE=enode://c354db99124f0faf677ff0e75c3cbbd568b2febc186af664e0c51ac435609badedc67a18a63adb64dacc1780a28dcefebfc29b83fd1a3f4aa3c0eb161364cf94@164.92.130.5:30303,enode://d41af1662434cad0a88fe3c7c92375ec5719f4516ab6d8cb9695e0e2e815382c767038e72c224e04040885157da47422f756c040a9072676c6e35c5b1a383cce@138.68.66.103:30303
ENR=enr:-Iq4QMCTfIMXnow27baRUb35Q8iiFHSIDBJh6hQM5Axohhf4b6Kr_cOCu0htQ5WvVqKvFgY28893DHAg8gnBAXsAVqmGAX53x8JggmlkgnY0gmlwhLKAlv6Jc2VjcDI1NmsxoQK6S-Cii_KmfFdUJL2TANL3ksaKUnNXvTCv1tLwXs0QgIN1ZHCCIyk

# Some clients suggest adjusting to higher (or lower) peer count. Adjust here, per client
PRYSM_PEER_COUNT=45
LH_PEER_COUNT=80
TEKU_PEER_COUNT=74
NIM_PEER_COUNT=160

# Secure web proxy - advanced use, please see instructions
DOMAIN=example.com
ACME_EMAIL=user@example.com
CF_EMAIL=user@example.com
CF_API_TOKEN=SECRETTOKEN
AWS_PROFILE=myprofile
AWS_HOSTED_ZONE_ID=myzoneid
GRAFANA_HOST=grafana
PRYSM_HOST=prysm
EL_HOST=ec
EL_WS_HOST=ecws
CL_HOST=cc
DDNS_SUBDOMAIN=
DDNS_PROXY=true

# Teku/Lighthouse/Nimbus/Lodestar rapid sync via initial state/checkpoint. For Teku, Lighthouse or Nimbus, please create an Infura
# eth2/beacon project first, then replace the {projectid} and {secret} here and use one of these lines instead of the empty one
#TEKU_RAPID_SYNC=--initial-state=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io/eth/v1/debug/beacon/states/finalized
#LH_RAPID_SYNC=--checkpoint-sync-url=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io/
#NIMBUS_RAPID_SYNC=--trusted-node-url=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io/
TEKU_RAPID_SYNC=
LH_RAPID_SYNC=
NIMBUS_RAPID_SYNC=
# Set this to true to rapid sync Lodestar
LS_RAPID_SYNC=false

# Consensus client address. This could be comma-separated for Lighthouse, with Infura as failover,
# or could just be a remote consensus client URL for Teku, Lighthouse or Prysm "validator only" setups. Not in use for Nimbus.
CL_NODE=http://consensus:5052

# Beaconcha.in API key for sending client stats. Used with lh-stats.yml or prysm-stats.yml,
# source build only for Prysm as of Sept 2021.
# Specify as just the API key, and give the machine name separately
BEACON_STATS_API=
BEACON_STATS_MACHINE=

# P2P ports you will forward to your staking node. Adjust here if you are
# going to use something other than defaults.
EL_P2P_PORT=30303
CL_P2P_PORT=9000
# Local grafana dashboard port. Do not expose to Internet, it is insecure http
GRAFANA_PORT=3000
# Local key management port. Do not expose to Internet, it is insecure http
KEY_API_PORT=7500
# Secure web proxy port, 443 and 80 are great defaults
TRAEFIK_WEB_PORT=443
TRAEFIK_WEB_HTTP_PORT=80
# Execution client RPC port, important when using ec-shared.yml. Also insecure, do not expose to Internet.
EL_RPC_PORT=8545
# Execution client WS port, used with Nimbus. Ditto insecure, do not expose to Internet.
EL_WS_PORT=8546
# SSV Node ports - note these conflict with Prysm by default
SSV_P2P_PORT=13000
SSV_P2P_PORT_UDP=12000

# Geth cache size. This matters for low-memory machines such as RasPi 4, where
# you may want to set it to 256. Geth will use the default if this is left blank.
#GETH_CACHE=--cache=256
GETH_CACHE=

# Restart policy: Set to no if you do not want services to automatically restart
RESTART=unless-stopped
# If you want debug logs, set this to debug instead of info
LOG_LEVEL=info

# You can set specific version targets and choose
# binary or compiled from source builds below,
# via `Dockerfile.binary` or `Dockerfile.source`
# These settings are not migrated when running `./ethd update`

# SSV
SSV_NODE_TAG=latest

# MEV-Boost
MEV_SRC_BUILD_TARGET=master
MEV_DOCKER_TAG=latest
MEV_DOCKERFILE=Dockerfile.binary

# Nimbus
NIM_SRC_BUILD_TARGET=unstable
NIM_DOCKER_TAG=multiarch-latest
NIM_DOCKERFILE=Dockerfile.source

# Teku
TEKU_SRC_BUILD_TARGET=master
TEKU_DOCKER_TAG=develop
TEKU_DOCKERFILE=Dockerfile.source

# Lighthouse
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
LH_SRC_BUILD_TARGET=unstable
LH_DOCKER_TAG=latest-unstable
LH_DOCKERFILE=Dockerfile.source

# Prysm
PRYSM_SRC_BUILD_TARGET=develop
PRYSM_DOCKER_TAG=latest
PRYSM_VC_DOCKER_TAG=latest
PRYSM_DOCKERFILE=Dockerfile.source

# Lodestar
LS_SRC_BUILD_TARGET=master
LS_DOCKER_TAG=next
LS_DOCKERFILE=Dockerfile.source

# Erigon
ERIGON_SRC_BUILD_TARGET=devel
ERIGON_DOCKER_TAG=devel
ERIGON_DOCKERFILE=Dockerfile.source

# Go-Ethereum aka Geth
GETH_SRC_BUILD_TARGET=master
GETH_DOCKER_TAG=latest
GETH_DOCKERFILE=Dockerfile.source

# Nethermind
NM_SRC_BUILD_TARGET=kiln
NM_DOCKER_TAG=kiln_test_sync
NM_DOCKERFILE=Dockerfile.source

# Besu
BESU_SRC_BUILD_TARGET=main
BESU_DOCKER_TAG=latest
BESU_DOCKERFILE=Dockerfile.source

# eth2.0-deposit-cli
DEPCLI_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Does not (yet?) exist on Docker hub
DEPCLI_DOCKER_TAG=nonesuch
DEPCLI_LOCALDIR=./.eth

# eth2-val-tools
VALTOOL_DOCKER_TAG=latest
VALTOOL_DOCKERFILE=Dockerfile.binary

# For the Node Dashboard, define a regex of mount points to ignore for the diskspace check.
NODE_EXPORTER_IGNORE_MOUNT_REGEX=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)
